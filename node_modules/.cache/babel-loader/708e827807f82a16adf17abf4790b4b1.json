{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\Airdrop.js\";\nimport React, { Component } from 'react';\n\nvar Airdrop = /*#__PURE__*/function (_Component) {\n  _inherits(Airdrop, _Component);\n\n  function Airdrop() {\n    var _this;\n\n    _classCallCheck(this, Airdrop);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Airdrop).call(this));\n    _this.state = {\n      time: {},\n      seconds: 20\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Airdrop, [{\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer == 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      // 1 . countdown one second at a time\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      }); // 2. stop counting when we hit zero\n\n      if (seconds == 0) {\n        this.props.issueTokens();\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours, minutes, seconds;\n      hours = Math.floor(secs / (60 * 60));\n      var devisor_for_minutes = secs % (60 * 60);\n      minutes = Math.floor(devisor_for_minutes / 60);\n      var devisor_for_seconds = devisor_for_minutes % 60;\n      seconds = Math.ceil(devisor_for_seconds);\n      var obj = {\n        'h': hours,\n        'm': minutes,\n        's': seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeLeftVar = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeLeftVar\n      });\n    }\n  }, {\n    key: \"airdropReleaseTokens\",\n    value: function airdropReleaseTokens() {\n      var stakingB = this.props.stakingBalance;\n\n      if (stakingB >= '50000000000000000000') {\n        this.startTimer();\n      }\n    } //releaseTokens() {\n    //    if(this.timer == 0) {\n    //       this.props.issueTokens()\n    //  }\n    //}\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.airdropReleaseTokens(); //this.releaseTokens()\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, this.state.time.m, \":\", this.state.time.s);\n    }\n  }]);\n\n  return Airdrop;\n}(Component);\n\nexport default Airdrop;","map":{"version":3,"sources":["C:/Users/LammyRu/Desktop/defi-staking-app-starter/defi-staking-app-starter/src/components/Airdrop.js"],"names":["React","Component","Airdrop","state","time","seconds","timer","startTimer","bind","countDown","setInterval","setState","secondsToTime","props","issueTokens","clearInterval","secs","hours","minutes","Math","floor","devisor_for_minutes","devisor_for_seconds","ceil","obj","timeLeftVar","stakingB","stakingBalance","airdropReleaseTokens","color","m","s"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,O;;;AAEF,qBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AACA,UAAKC,KAAL,GAAa,CAAb;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AALU;AAMb;;;;iCAEY;AACT,UAAG,KAAKF,KAAL,IAAc,CAAd,IAAmB,KAAKH,KAAL,CAAWE,OAAX,GAAqB,CAA3C,EAA8C;AAC1C,aAAKC,KAAL,GAAaI,WAAW,CAAC,KAAKD,SAAN,EAAiB,IAAjB,CAAxB;AACH;AACJ;;;gCAEW;AACR;AACA,UAAIJ,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,GAAqB,CAAnC;AAEA,WAAKM,QAAL,CAAc;AACVP,QAAAA,IAAI,EAAE,KAAKQ,aAAL,CAAmBP,OAAnB,CADI;AAEVA,QAAAA,OAAO,EAAEA;AAFC,OAAd,EAJQ,CAQR;;AACA,UAAGA,OAAO,IAAI,CAAd,EAAiB;AACb,aAAKQ,KAAL,CAAWC,WAAX;AACAC,QAAAA,aAAa,CAAC,KAAKT,KAAN,CAAb;AACH;AACJ;;;kCAEaU,I,EAAM;AAChB,UAAIC,KAAJ,EAAWC,OAAX,EAAoBb,OAApB;AACAY,MAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWJ,IAAI,IAAI,KAAK,EAAT,CAAf,CAAR;AAEA,UAAIK,mBAAmB,GAAGL,IAAI,IAAI,KAAK,EAAT,CAA9B;AACAE,MAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,mBAAmB,GAAG,EAAjC,CAAV;AAEA,UAAIC,mBAAmB,GAAGD,mBAAmB,GAAG,EAAhD;AACAhB,MAAAA,OAAO,GAAGc,IAAI,CAACI,IAAL,CAAUD,mBAAV,CAAV;AAEA,UAAIE,GAAG,GAAG;AACN,aAAIP,KADE;AAEN,aAAIC,OAFE;AAGN,aAAIb;AAHE,OAAV;AAKA,aAAOmB,GAAP;AACH;;;wCAEmB;AAChB,UAAIC,WAAW,GAAG,KAAKb,aAAL,CAAmB,KAAKT,KAAL,CAAWE,OAA9B,CAAlB;AACA,WAAKM,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAEqB;AAAP,OAAd;AACH;;;2CAEsB;AACnB,UAAIC,QAAQ,GAAG,KAAKb,KAAL,CAAWc,cAA1B;;AACA,UAAGD,QAAQ,IAAI,sBAAf,EAAuC;AACnC,aAAKnB,UAAL;AACH;AACJ,K,CAED;AACA;AACC;AACC;AACF;;;;6BAIS;AACL,WAAKqB,oBAAL,GADK,CAEL;;AACA,0BACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAK1B,KAAL,CAAWC,IAAX,CAAgB0B,CAA9C,OAAkD,KAAK3B,KAAL,CAAWC,IAAX,CAAgB2B,CAAlE,CADJ;AAIH;;;;EA5EiB9B,S;;AA+EtB,eAAeC,OAAf","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass Airdrop extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {time: {}, seconds: 20 };\r\n        this.timer = 0;\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.countDown = this.countDown.bind(this);\r\n    }\r\n\r\n    startTimer() {\r\n        if(this.timer == 0 && this.state.seconds > 0) {\r\n            this.timer = setInterval(this.countDown, 1000)\r\n        }\r\n    }\r\n\r\n    countDown() {\r\n        // 1 . countdown one second at a time\r\n        let seconds = this.state.seconds - 1\r\n\r\n        this.setState({\r\n            time: this.secondsToTime(seconds),\r\n            seconds: seconds\r\n        })\r\n        // 2. stop counting when we hit zero\r\n        if(seconds == 0) {\r\n            this.props.issueTokens()\r\n            clearInterval(this.timer)\r\n        }\r\n    }\r\n\r\n    secondsToTime(secs) {\r\n        let hours, minutes, seconds\r\n        hours = Math.floor(secs / (60 * 60))\r\n\r\n        let devisor_for_minutes = secs % (60 * 60)\r\n        minutes = Math.floor(devisor_for_minutes / 60)\r\n\r\n        let devisor_for_seconds = devisor_for_minutes % 60\r\n        seconds = Math.ceil(devisor_for_seconds)\r\n\r\n        let obj = {\r\n            'h':hours,\r\n            'm':minutes,\r\n            's':seconds\r\n        }\r\n        return obj\r\n    }\r\n   \r\n    componentDidMount() {\r\n        let timeLeftVar = this.secondsToTime(this.state.seconds)\r\n        this.setState({time: timeLeftVar})\r\n    }\r\n\r\n    airdropReleaseTokens() {\r\n        let stakingB = this.props.stakingBalance\r\n        if(stakingB >= '50000000000000000000') {\r\n            this.startTimer()\r\n        }\r\n    }\r\n\r\n    //releaseTokens() {\r\n    //    if(this.timer == 0) {\r\n     //       this.props.issueTokens()\r\n      //  }\r\n    //}\r\n\r\n\r\n\r\n    render() {\r\n        this.airdropReleaseTokens()\r\n        //this.releaseTokens()\r\n        return (\r\n            <div style={{color:'black'}}>{this.state.time.m}:{this.state.time.s} \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Airdrop;"]},"metadata":{},"sourceType":"module"}