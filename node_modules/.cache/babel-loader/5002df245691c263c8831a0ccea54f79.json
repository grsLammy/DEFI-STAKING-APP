{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\nimport './App.css';\nimport Tether from '../truffle_abis/Tether.json';\nimport RewardToken from '../truffle_abis/RewardToken.json';\nimport DecentralBank from '../truffle_abis/DecentralBank.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tether: {},\n      rewardToken: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rewardTokenBalance: '0',\n      stakingBalance: '0',\n      account: '0x0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereuem) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereuem);\n                _context2.prev = 2;\n                _context2.next = 5;\n                return window.web3.enable();\n\n              case 5:\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](2);\n                window.alert('User account access denied by the user.');\n\n              case 10:\n                _context2.next = 13;\n                break;\n\n              case 12:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Opps! It seems like Ehereuem browser was nowhere to be found. You can check out MetaMask!');\n                }\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 7]]);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance, rewardTokenData, rewardToken, rewardTokenBalance, decentralBankData, decentralBank, stakingBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.requestAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                }); //console.log('Account:', this.state.account)\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                //load Tether Contract\n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 14;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 14:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                }); //console.log('Tether balance:',this.state.tetherBalance)\n\n                _context3.next = 19;\n                break;\n\n              case 18:\n                window.alert('Tether not deployed to the network');\n\n              case 19:\n                //load RewardToken Contract\n                rewardTokenData = RewardToken.networks[networkId];\n\n                if (!rewardTokenData) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                rewardToken = new web3.eth.Contract(RewardToken.abi, rewardTokenData.address);\n                this.setState({\n                  rewardToken: rewardToken\n                });\n                _context3.next = 25;\n                return rewardToken.methods.balanceOf(this.state.account).call();\n\n              case 25:\n                rewardTokenBalance = _context3.sent;\n                this.setState({\n                  rewardTokenBalance: rewardTokenBalance.toString()\n                }); //console.log('Reward Token balance:',this.state.rewardTokenBalance)\n\n                _context3.next = 30;\n                break;\n\n              case 29:\n                window.alert('Reward Token not deployed to the network');\n\n              case 30:\n                //load DecentralBank Contract\n                decentralBankData = DecentralBank.networks[networkId];\n\n                if (!decentralBankData) {\n                  _context3.next = 40;\n                  break;\n                }\n\n                decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n                this.setState({\n                  decentralBank: decentralBank\n                });\n                _context3.next = 36;\n                return decentralBank.methods.stakingBalance(this.state.account).call();\n\n              case 36:\n                stakingBalance = _context3.sent;\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                }); //console.log('Staking balance:',this.state.stakingBalance)\n\n                _context3.next = 41;\n                break;\n\n              case 40:\n                window.alert('Decentral Bank not deployed to the network');\n\n              case 41:\n                this.setState({\n                  loading: false\n                });\n\n              case 42:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() //Our react code goes in here!\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/LammyRu/Desktop/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","RewardToken","DecentralBank","App","loadWeb3","loadBlockchainData","props","state","tether","rewardToken","decentralBank","tetherBalance","rewardTokenBalance","stakingBalance","account","loading","window","ethereuem","web3","enable","alert","currentProvider","eth","requestAccounts","setState","net","getId","networkId","tetherData","networks","Contract","abi","address","methods","balanceOf","call","toString","rewardTokenData","decentralBankData"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Navbar from './Navbar'\r\nimport Web3 from 'web3'\r\nimport './App.css'\r\nimport Tether from '../truffle_abis/Tether.json'\r\nimport RewardToken from '../truffle_abis/RewardToken.json'\r\nimport DecentralBank from '../truffle_abis/DecentralBank.json'\r\n\r\nclass App extends Component {\r\n\r\n\tasync UNSAFE_componentWillMount() {\r\n\t\tawait this.loadWeb3()\r\n\t\tawait this.loadBlockchainData()\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props) \r\n\t\tthis.state = {\r\n\t\t\ttether: {},\r\n\t\t\trewardToken: {},\r\n\t\t\tdecentralBank: {},\r\n\t\t\ttetherBalance: '0',\r\n\t\t\trewardTokenBalance: '0',\r\n\t\t\tstakingBalance: '0',\r\n\t\t\taccount: '0x0',\r\n\t\t\tloading: true\r\n\t\t}\r\n\t}\r\n\r\n\tasync loadWeb3() {\r\n\t\tif(window.ethereuem) {\r\n\t\t\twindow.web3 = new Web3(window.ethereuem)\r\n\t\t\ttry{\r\n\t\t\t\tawait window.web3.enable()\r\n\t\t\t} catch(error) {\r\n\t\t\t\twindow.alert('User account access denied by the user.')\r\n\t\t\t}\r\n\t\t} else if (window.web3) {\r\n\t\t\twindow.web3 = new Web3(window.web3.currentProvider)\r\n\t\t} else {\r\n\t\t\twindow.alert('Opps! It seems like Ehereuem browser was nowhere to be found. You can check out MetaMask!')\r\n\t\t}\r\n\t}\r\n\r\n\tasync loadBlockchainData() {\r\n\t\tconst web3 = window.web3 \r\n\t\tconst account = await web3.eth.requestAccounts()\r\n\t\tthis.setState({account: account[0]})\r\n\t\t//console.log('Account:', this.state.account)\r\n\t\tconst networkId = await web3.eth.net.getId()\r\n\r\n\t\t//load Tether Contract\r\n\t\tconst tetherData = Tether.networks[networkId]\r\n\t\tif(tetherData) {\r\n\t\t\tconst tether = new web3.eth.Contract(Tether.abi, tetherData.address)\r\n\t\t\tthis.setState({tether})\r\n\t\t\tlet tetherBalance = await tether.methods.balanceOf(this.state.account).call()\r\n\t\t\tthis.setState({tetherBalance: tetherBalance.toString()})\r\n\t\t\t//console.log('Tether balance:',this.state.tetherBalance)\r\n\t\t} else {\r\n\t\t\twindow.alert('Tether not deployed to the network')\r\n\t\t}\r\n\r\n\t\t//load RewardToken Contract\r\n\t\tconst rewardTokenData = RewardToken.networks[networkId]\r\n\t\tif(rewardTokenData) {\r\n\t\t\tconst rewardToken = new web3.eth.Contract(RewardToken.abi,rewardTokenData.address)\r\n\t\t\tthis.setState({rewardToken})\r\n\t\t\tlet rewardTokenBalance = await rewardToken.methods.balanceOf(this.state.account).call()\r\n\t\t\tthis.setState({rewardTokenBalance: rewardTokenBalance.toString()})\r\n\t\t\t//console.log('Reward Token balance:',this.state.rewardTokenBalance)\r\n\t\t} else {\r\n\t\t\twindow.alert('Reward Token not deployed to the network')\r\n\t\t}\r\n\r\n\t\t//load DecentralBank Contract\r\n\t\tconst decentralBankData = DecentralBank.networks[networkId]\r\n\t\tif(decentralBankData) {\r\n\t\t\tconst decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address)\r\n\t\t\tthis.setState({decentralBank})\r\n\t\t\tlet stakingBalance = await decentralBank.methods.stakingBalance(this.state.account).call()\r\n\t\t\tthis.setState({stakingBalance: stakingBalance.toString()})\r\n\t\t\t//console.log('Staking balance:',this.state.stakingBalance)\r\n\t\t} else {\r\n\t\t\twindow.alert('Decentral Bank not deployed to the network')\r\n\t\t}\r\n\r\n\t\tthis.setState({loading: false})\r\n\r\n\t}\r\n\r\n\t//Our react code goes in here!\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Navbar account={this.state.account}/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>\r\n\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}