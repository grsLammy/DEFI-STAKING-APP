{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\LammyRu\\\\Desktop\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport './App.css';\nimport Web3 from 'web3';\nimport Main from './Main.js';\nimport Navbar from './Navbar';\nimport React, { Component } from 'react';\nimport Tether from '../truffle_abis/Tether.json';\nimport RewardToken from '../truffle_abis/RewardToken.json';\nimport DecentralBank from '../truffle_abis/DecentralBank.json';\nimport ParticleSettings from './ParticleSettings';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.stakeTokens = function (amount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.tether.methods.approve(_this.state.decentralBank._address, amount).send({\n        from: _this.state.account\n      }).on('transactionHash', function (hash) {\n        _this.state.decentralBank.methods.depositTokens(amount).send({\n          from: _this.state.account\n        }).on('transactionHash', function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.unstakeTokens = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.decentralBank.methods.unstakeTokens().send({\n        from: _this.state.account\n      }).on('transactionHash', function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.issueTokens = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.decentralBank.methods.issueTokens().call().on('transactionHash', function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.state = {\n      tether: {},\n      rewardToken: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rewardTokenBalance: '0',\n      stakingBalance: '0',\n      decentralBankOwner: '0x0',\n      account: '0x0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereuem) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereuem);\n                _context2.prev = 2;\n                _context2.next = 5;\n                return window.web3.enable();\n\n              case 5:\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](2);\n                window.alert('User account access denied by the user.');\n\n              case 10:\n                _context2.next = 13;\n                break;\n\n              case 12:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Opps! It seems like Ehereuem browser was nowhere to be found. You can check out MetaMask!');\n                }\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 7]]);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance, rewardTokenData, rewardToken, rewardTokenBalance, decentralBankData, decentralBank, stakingBalance, decentralBankOwner;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.requestAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                }); //console.log('Account:', this.state.account)\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                //load Tether Contract\n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 14;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 14:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                }); //console.log('Tether balance:',this.state.tetherBalance)\n\n                _context3.next = 19;\n                break;\n\n              case 18:\n                window.alert('Tether not deployed to the network');\n\n              case 19:\n                //load RewardToken Contract\n                rewardTokenData = RewardToken.networks[networkId];\n\n                if (!rewardTokenData) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                rewardToken = new web3.eth.Contract(RewardToken.abi, rewardTokenData.address);\n                this.setState({\n                  rewardToken: rewardToken\n                });\n                _context3.next = 25;\n                return rewardToken.methods.balanceOf(this.state.account).call();\n\n              case 25:\n                rewardTokenBalance = _context3.sent;\n                this.setState({\n                  rewardTokenBalance: rewardTokenBalance.toString()\n                }); //console.log('Reward Token balance:',this.state.rewardTokenBalance)\n\n                _context3.next = 30;\n                break;\n\n              case 29:\n                window.alert('Reward Token not deployed to the network');\n\n              case 30:\n                //load DecentralBank Contract\n                decentralBankData = DecentralBank.networks[networkId];\n\n                if (!decentralBankData) {\n                  _context3.next = 45;\n                  break;\n                }\n\n                decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n                this.setState({\n                  decentralBank: decentralBank\n                });\n                _context3.next = 36;\n                return decentralBank.methods.stakingBalance(this.state.account).call();\n\n              case 36:\n                stakingBalance = _context3.sent;\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                }); //console.log('Staking balance:',this.state.stakingBalance)\n\n                _context3.next = 40;\n                return decentralBank.methods.owner().call();\n\n              case 40:\n                decentralBankOwner = _context3.sent;\n                this.setState({\n                  decentralBankOwner: decentralBankOwner\n                });\n                console.log('msg.owner: ', this.state.decentralBankOwner);\n                _context3.next = 46;\n                break;\n\n              case 45:\n                window.alert('Decentral Bank not deployed to the network');\n\n              case 46:\n                this.setState({\n                  loading: false\n                });\n\n              case 47:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() //Two function, one that stakes and other one than unstakes\n    //using our decentralBank contract - to deposit tokens and unstaking\n    //All of this is for staking:\n    //depositTokens transferFrom ...\n    //function approve transaction hash\n    // STAKING FUNCTION ?? >> decentralBank.depositTokens(send transactionHash =>)\n    //staking function\n\n  }, {\n    key: \"render\",\n    //Our react code goes in here!\n    value: function render() {\n      var content;\n      {\n        this.state.loading ? content = /*#__PURE__*/React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          style: {\n            margin: '30',\n            color: 'white'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 3\n          }\n        }, \"LOADING PLEASE...\") : content = /*#__PURE__*/React.createElement(Main, {\n          tetherBalance: this.state.tetherBalance,\n          rewardTokenBalance: this.state.rewardTokenBalance,\n          stakingBalance: this.state.stakingBalance,\n          stakeTokens: this.stakeTokens,\n          unstakeTokens: this.unstakeTokens,\n          decentralBankContract: this.decentralBank,\n          issueTokens: this.issueTokens,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 3\n          }\n        });\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"App\",\n        style: {\n          position: 'relative'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(ParticleSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 6\n        }\n      })), /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px',\n          minHeight: '100vm'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 8\n        }\n      }, content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/LammyRu/Desktop/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["Web3","Main","Navbar","React","Component","Tether","RewardToken","DecentralBank","ParticleSettings","App","loadWeb3","loadBlockchainData","props","stakeTokens","amount","setState","loading","state","tether","methods","approve","decentralBank","_address","send","from","account","on","hash","depositTokens","unstakeTokens","issueTokens","call","rewardToken","tetherBalance","rewardTokenBalance","stakingBalance","decentralBankOwner","window","ethereuem","web3","enable","alert","currentProvider","eth","requestAccounts","net","getId","networkId","tetherData","networks","Contract","abi","address","balanceOf","toString","rewardTokenData","decentralBankData","owner","console","log","content","margin","color","position","maxWidth","minHeight"],"mappings":"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","sourcesContent":["import './App.css'\r\nimport Web3 from 'web3'\r\nimport Main from './Main.js'\r\nimport Navbar from './Navbar'\r\nimport React, {Component} from 'react';\r\nimport Tether from '../truffle_abis/Tether.json'\r\nimport RewardToken from '../truffle_abis/RewardToken.json'\r\nimport DecentralBank from '../truffle_abis/DecentralBank.json'\r\nimport ParticleSettings from './ParticleSettings';\r\n\r\nclass App extends Component {\r\n\r\n\tasync UNSAFE_componentWillMount() {\r\n\t\tawait this.loadWeb3()\r\n\t\tawait this.loadBlockchainData()\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props) \r\n\t\tthis.state = {\r\n\t\t\ttether: {},\r\n\t\t\trewardToken: {},\r\n\t\t\tdecentralBank: {},\r\n\t\t\ttetherBalance: '0',\r\n\t\t\trewardTokenBalance: '0',\r\n\t\t\tstakingBalance: '0',\r\n\t\t\tdecentralBankOwner: '0x0',\r\n\t\t\taccount: '0x0',\r\n\t\t\tloading: true\r\n\t\t}\r\n\t}\r\n\r\n\tasync loadWeb3() {\r\n\t\tif(window.ethereuem) {\r\n\t\t\twindow.web3 = new Web3(window.ethereuem)\r\n\t\t\ttry{\r\n\t\t\t\tawait window.web3.enable()\r\n\t\t\t} catch(error) {\r\n\t\t\t\twindow.alert('User account access denied by the user.')\r\n\t\t\t}\r\n\t\t} else if (window.web3) {\r\n\t\t\twindow.web3 = new Web3(window.web3.currentProvider)\r\n\t\t} else {\r\n\t\t\twindow.alert('Opps! It seems like Ehereuem browser was nowhere to be found. You can check out MetaMask!')\r\n\t\t}\r\n\t}\r\n\r\n\tasync loadBlockchainData() {\r\n\t\tconst web3 = window.web3 \r\n\t\tconst account = await web3.eth.requestAccounts()\r\n\t\tthis.setState({account: account[0]})\r\n\t\t//console.log('Account:', this.state.account)\r\n\t\tconst networkId = await web3.eth.net.getId()\r\n\r\n\t\t//load Tether Contract\r\n\t\tconst tetherData = Tether.networks[networkId]\r\n\t\tif(tetherData) {\r\n\t\t\tconst tether = new web3.eth.Contract(Tether.abi, tetherData.address)\r\n\t\t\tthis.setState({tether})\r\n\t\t\tlet tetherBalance = await tether.methods.balanceOf(this.state.account).call()\r\n\t\t\tthis.setState({tetherBalance: tetherBalance.toString()})\r\n\t\t\t//console.log('Tether balance:',this.state.tetherBalance)\r\n\t\t} else {\r\n\t\t\twindow.alert('Tether not deployed to the network')\r\n\t\t}\r\n\r\n\t\t//load RewardToken Contract\r\n\t\tconst rewardTokenData = RewardToken.networks[networkId]\r\n\t\tif(rewardTokenData) {\r\n\t\t\tconst rewardToken = new web3.eth.Contract(RewardToken.abi,rewardTokenData.address)\r\n\t\t\tthis.setState({rewardToken})\r\n\t\t\tlet rewardTokenBalance = await rewardToken.methods.balanceOf(this.state.account).call()\r\n\t\t\tthis.setState({rewardTokenBalance: rewardTokenBalance.toString()})\r\n\t\t\t//console.log('Reward Token balance:',this.state.rewardTokenBalance)\r\n\t\t} else {\r\n\t\t\twindow.alert('Reward Token not deployed to the network')\r\n\t\t}\r\n\r\n\t\t//load DecentralBank Contract\r\n\t\tconst decentralBankData = DecentralBank.networks[networkId]\r\n\t\tif(decentralBankData) {\r\n\t\t\tconst decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address)\r\n\t\t\tthis.setState({decentralBank})\r\n\t\t\tlet stakingBalance = await decentralBank.methods.stakingBalance(this.state.account).call()\r\n\t\t\tthis.setState({stakingBalance: stakingBalance.toString()})\r\n\t\t\t//console.log('Staking balance:',this.state.stakingBalance)\r\n\t\t\tconst decentralBankOwner = await decentralBank.methods.owner().call()\r\n\t\t\tthis.setState({decentralBankOwner: decentralBankOwner})\r\n\t\t\tconsole.log('msg.owner: ',this.state.decentralBankOwner)\r\n\t\t} else {\r\n\t\t\twindow.alert('Decentral Bank not deployed to the network')\r\n\t\t}\r\n\r\n\t\tthis.setState({loading: false})\r\n\t}\r\n\r\n\t//Two function, one that stakes and other one than unstakes\r\n\t//using our decentralBank contract - to deposit tokens and unstaking\r\n\t//All of this is for staking:\r\n\t//depositTokens transferFrom ...\r\n\t//function approve transaction hash\r\n\t// STAKING FUNCTION ?? >> decentralBank.depositTokens(send transactionHash =>)\r\n\r\n\t//staking function\r\n\tstakeTokens = (amount) => {\r\n\t\tthis.setState({loading: true})\r\n\t\tthis.state.tether.methods.approve(this.state.decentralBank._address, amount).send({from:this.state.account}).on('transactionHash', (hash) => {\r\n\t\t\tthis.state.decentralBank.methods.depositTokens(amount).send({from:this.state.account}).on('transactionHash', (hash) => {\r\n\t\t\t\tthis.setState({loading: false})\r\n\t\t\t})\t\r\n\t\t})\t\r\n\t}\t\r\n\r\n\t//unstaking function\r\n\tunstakeTokens = () => {\r\n\t\tthis.setState({loading: true})\r\n\t\tthis.state.decentralBank.methods.unstakeTokens().send({from:this.state.account}).on('transactionHash',(hash) => {\r\n\t\t\tthis.setState({loading: false})\r\n\t\t})\r\n\t}\r\n\r\n\tissueTokens = () => {\r\n\t\tthis.setState({loading: true})\r\n\t\tthis.state.decentralBank.methods.issueTokens().call().on('transactionHash',(hash) => {\r\n\t\t\tthis.setState({loading: false})\r\n\t\t})\r\n\t}\r\n\r\n\r\n\r\n\r\n\t//Our react code goes in here!\r\n\trender() {\r\n\t\tlet content \r\n\t\t{this.state.loading ? content =\r\n\t\t<p id='loader' className='text-center' style={{margin:'30', color:'white'}}>\r\n\t\tLOADING PLEASE...</p> : content = \r\n\t\t<Main \r\n\t\t\ttetherBalance={this.state.tetherBalance}\r\n\t\t\trewardTokenBalance={this.state.rewardTokenBalance}\r\n\t\t\tstakingBalance={this.state.stakingBalance}\r\n\t\t\tstakeTokens={this.stakeTokens}\r\n\t\t\tunstakeTokens={this.unstakeTokens}\r\n\t\t\tdecentralBankContract={this.decentralBank}\r\n\t\t\tissueTokens={this.issueTokens}\r\n\t\t/>}\r\n\t\treturn(\r\n\t\t\t<div class='App' style={{position:'relative'}}>\r\n\t\t\t\t<div style={{position:'absolute'}}>\r\n\t\t\t\t\t<ParticleSettings/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Navbar account={this.state.account}/>\r\n\t\t\t\t<div className='container-fluid mt-5'>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<main role='main' className='col-lg-12 ml-auto mr-auto' style={{maxWidth:'600px',minHeight:'100vm'}}>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{content}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</main> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}